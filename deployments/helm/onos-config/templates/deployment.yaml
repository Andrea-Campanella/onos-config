apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "onos-config.fullname" . }}
  namespace: default
  labels:
     {{- include "onos-config.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ template "onos-config.fullname" . }}
      app: onos
      type: config
      resource: {{ template "onos-config.fullname" . }}
      {{- include "onos-config.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: {{ template "onos-config.fullname" . }}
        app: onos
        type: config
        resource: {{ template "onos-config.fullname" . }}
        {{- include "onos-config.selectorLabels" . | nindent 8 }}
      annotations:
        "seccomp.security.alpha.kubernetes.io/pod": "unconfined"
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ATOMIX_CONTROLLER
              value: {{ .Values.store.controller | quote }}
            - name: ATOMIX_APP
              value: {{ include "onos-config.fullname" . }}
            - name: ATOMIX_RAFT
              value: {{ .Values.store.raftgroup }}
            - name: ATOMIX_NAMESPACE
              value: {{ .Values.store.namespace }}
          args:
            - "-caPath=/etc/onos-config/certs/tls.cacrt"
            - "-keyPath=/etc/onos-config/certs/tls.key"
            - "-certPath=/etc/onos-config/certs/tls.crt"
            {{- range $i, $plugin := .Values.plugins }}
            - {{ printf "-modelPlugin=/usr/local/lib/%s" $plugin }}
            {{- end }}
          ports:
            - name: grpc
              containerPort: 5150
            # Expose the debug port for debugging
            {{- if .Values.debug }}
            - name: debug
              containerPort: 40000
              protocol: TCP
            {{- end }}
          # Disable probes for debugging since application starts paused
          # See https://github.com/go-delve/delve/issues/245
          {{- if not .Values.debug }}
          livenessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- end }}
          volumeMounts:
            - name: secret
              mountPath: /etc/onos-config/certs
              readOnly: true
      # Enable ptrace for debugging
      securityContext:
        {{- toYaml .Values.securityContext | nindent 12 }}
        {{- if .Values.debug }}
        capabilities:
          add:
            - SYS_PTRACE
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # Mount test volumes
      # TODO: This should be removed when stores are added!
      volumes:
        - name: secret
          secret:
            secretName: {{ template "onos-config.fullname" . }}-secret
    {{- with .Values.nodeSelector }}
    nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
    affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}